
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CONSTANT DATA_TYPE DIVIDE ELSE GREATER IDENTIFIER IF KEYWORD LCURLY LESS LITERAL LPAREN MINUS NUMBER PLUS PRINT RCURLY RPAREN SEPARATOR STATEMENT_END TIMES WHILEprogram : statement_liststatement_list : statement\n                      | statement statement_liststatement : declaration\n                 | assignment\n                 | print_statement\n                 | if_statement\n                 | while_statementdeclaration : DATA_TYPE IDENTIFIER STATEMENT_END\n                   | DATA_TYPE IDENTIFIER ASSIGN expression STATEMENT_ENDassignment : IDENTIFIER ASSIGN expression STATEMENT_ENDprint_statement : PRINT LPAREN expression RPAREN STATEMENT_ENDif_statement : IF expression LCURLY statement_list RCURLY\n                    | IF expression LCURLY statement_list RCURLY ELSE LCURLY statement_list RCURLYwhile_statement : WHILE expression LCURLY statement_list RCURLYexpression : term\n                  | term PLUS expression\n                  | term MINUS expression\n                  | term GREATER term\n                  | term LESS term\n                  | CONSTANTterm : factor\n            | factor TIMES term\n            | factor DIVIDE termfactor : NUMBER\n              | IDENTIFIER\n              | LPAREN expression RPAREN'
    
_lr_action_items = {'DATA_TYPE':([0,3,4,5,6,7,8,26,30,38,40,51,52,53,54,56,58,],[9,9,-4,-5,-6,-7,-8,-9,9,9,-11,-10,-12,-13,-15,9,-14,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,12,13,16,17,24,26,27,30,31,32,33,34,35,36,38,40,51,52,53,54,56,58,],[10,10,-4,-5,-6,-7,-8,15,23,23,23,23,23,-9,23,10,23,23,23,23,23,23,10,-11,-10,-12,-13,-15,10,-14,]),'PRINT':([0,3,4,5,6,7,8,26,30,38,40,51,52,53,54,56,58,],[11,11,-4,-5,-6,-7,-8,-9,11,11,-11,-10,-12,-13,-15,11,-14,]),'IF':([0,3,4,5,6,7,8,26,30,38,40,51,52,53,54,56,58,],[12,12,-4,-5,-6,-7,-8,-9,12,12,-11,-10,-12,-13,-15,12,-14,]),'WHILE':([0,3,4,5,6,7,8,26,30,38,40,51,52,53,54,56,58,],[13,13,-4,-5,-6,-7,-8,-9,13,13,-11,-10,-12,-13,-15,13,-14,]),'$end':([1,2,3,4,5,6,7,8,14,26,40,51,52,53,54,58,],[0,-1,-2,-4,-5,-6,-7,-8,-3,-9,-11,-10,-12,-13,-15,-14,]),'RCURLY':([3,4,5,6,7,8,14,26,40,42,50,51,52,53,54,57,58,],[-2,-4,-5,-6,-7,-8,-3,-9,-11,53,54,-10,-12,-13,-15,58,-14,]),'ASSIGN':([10,15,],[16,27,]),'LPAREN':([11,12,13,16,17,24,27,31,32,33,34,35,36,],[17,24,24,24,24,24,24,24,24,24,24,24,24,]),'CONSTANT':([12,13,16,17,24,27,31,32,],[20,20,20,20,20,20,20,20,]),'NUMBER':([12,13,16,17,24,27,31,32,33,34,35,36,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'STATEMENT_END':([15,19,20,21,22,23,28,39,41,43,44,45,46,47,48,49,],[26,-16,-21,-22,-25,-26,40,51,52,-17,-18,-19,-20,-23,-24,-27,]),'LCURLY':([18,19,20,21,22,23,25,43,44,45,46,47,48,49,55,],[30,-16,-21,-22,-25,-26,38,-17,-18,-19,-20,-23,-24,-27,56,]),'RPAREN':([19,20,21,22,23,29,37,43,44,45,46,47,48,49,],[-16,-21,-22,-25,-26,41,49,-17,-18,-19,-20,-23,-24,-27,]),'PLUS':([19,21,22,23,47,48,49,],[31,-22,-25,-26,-23,-24,-27,]),'MINUS':([19,21,22,23,47,48,49,],[32,-22,-25,-26,-23,-24,-27,]),'GREATER':([19,21,22,23,47,48,49,],[33,-22,-25,-26,-23,-24,-27,]),'LESS':([19,21,22,23,47,48,49,],[34,-22,-25,-26,-23,-24,-27,]),'TIMES':([21,22,23,49,],[35,-25,-26,-27,]),'DIVIDE':([21,22,23,49,],[36,-25,-26,-27,]),'ELSE':([53,],[55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,30,38,56,],[2,14,42,50,57,]),'statement':([0,3,30,38,56,],[3,3,3,3,3,]),'declaration':([0,3,30,38,56,],[4,4,4,4,4,]),'assignment':([0,3,30,38,56,],[5,5,5,5,5,]),'print_statement':([0,3,30,38,56,],[6,6,6,6,6,]),'if_statement':([0,3,30,38,56,],[7,7,7,7,7,]),'while_statement':([0,3,30,38,56,],[8,8,8,8,8,]),'expression':([12,13,16,17,24,27,31,32,],[18,25,28,29,37,39,43,44,]),'term':([12,13,16,17,24,27,31,32,33,34,35,36,],[19,19,19,19,19,19,19,19,45,46,47,48,]),'factor':([12,13,16,17,24,27,31,32,33,34,35,36,],[21,21,21,21,21,21,21,21,21,21,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','Compiler.py',90),
  ('statement_list -> statement','statement_list',1,'p_statement_list','Compiler.py',94),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','Compiler.py',95),
  ('statement -> declaration','statement',1,'p_statement','Compiler.py',102),
  ('statement -> assignment','statement',1,'p_statement','Compiler.py',103),
  ('statement -> print_statement','statement',1,'p_statement','Compiler.py',104),
  ('statement -> if_statement','statement',1,'p_statement','Compiler.py',105),
  ('statement -> while_statement','statement',1,'p_statement','Compiler.py',106),
  ('declaration -> DATA_TYPE IDENTIFIER STATEMENT_END','declaration',3,'p_declaration','Compiler.py',110),
  ('declaration -> DATA_TYPE IDENTIFIER ASSIGN expression STATEMENT_END','declaration',5,'p_declaration','Compiler.py',111),
  ('assignment -> IDENTIFIER ASSIGN expression STATEMENT_END','assignment',4,'p_assignment','Compiler.py',130),
  ('print_statement -> PRINT LPAREN expression RPAREN STATEMENT_END','print_statement',5,'p_print_statement','Compiler.py',148),
  ('if_statement -> IF expression LCURLY statement_list RCURLY','if_statement',5,'p_if_statement','Compiler.py',152),
  ('if_statement -> IF expression LCURLY statement_list RCURLY ELSE LCURLY statement_list RCURLY','if_statement',9,'p_if_statement','Compiler.py',153),
  ('while_statement -> WHILE expression LCURLY statement_list RCURLY','while_statement',5,'p_while_statement','Compiler.py',160),
  ('expression -> term','expression',1,'p_expression','Compiler.py',164),
  ('expression -> term PLUS expression','expression',3,'p_expression','Compiler.py',165),
  ('expression -> term MINUS expression','expression',3,'p_expression','Compiler.py',166),
  ('expression -> term GREATER term','expression',3,'p_expression','Compiler.py',167),
  ('expression -> term LESS term','expression',3,'p_expression','Compiler.py',168),
  ('expression -> CONSTANT','expression',1,'p_expression','Compiler.py',169),
  ('term -> factor','term',1,'p_term','Compiler.py',178),
  ('term -> factor TIMES term','term',3,'p_term','Compiler.py',179),
  ('term -> factor DIVIDE term','term',3,'p_term','Compiler.py',180),
  ('factor -> NUMBER','factor',1,'p_factor','Compiler.py',189),
  ('factor -> IDENTIFIER','factor',1,'p_factor','Compiler.py',190),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Compiler.py',191),
]
